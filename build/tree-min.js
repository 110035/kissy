/*
Copyright 2013, KISSY UI Library v1.40dev
MIT Licensed
build time: May 14 20:40
*/
KISSY.add("tree/base",function(e,b,c,h,a){return c.extend([a],{},{ATTRS:{xrender:{value:h},defaultChildCfg:{value:{xclass:"tree-node"}}}},{xclass:"tree",priority:30})},{requires:["component/base","./node","./tree-render","./tree-manager"]});
KISSY.add("tree/check-node",function(e,b,c){var h=b.all,b=c.extend({performActionInternal:function(a){var b;b=this.get("expanded");var e=this.get("expandIconEl"),d=this.get("tree"),a=h(a.target);d.focus();a.equals(e)?this.set("expanded",!b):(b=this.get("checkState"),this.set("checkState",1==b?0:1),this.fire("click"))},_onSetCheckState:function(a){var b=this.get("parent"),c,d,g,h;(1==a||0==a)&&e.each(this.get("children"),function(d){d.set("checkState",a)});if(b){c=0;h=b.get("children");for(d=0;d<h.length;d++){g=
h[d];g=g.get("checkState");if(2==g){b.set("checkState",2);return}1==g&&c++}0===c?b.set("checkState",0):c==h.length?b.set("checkState",1):b.set("checkState",2)}}},{ATTRS:{checkIconEl:{view:1},checkable:{value:!0,view:1},checkState:{value:0,sync:0,view:1},defaultChildCfg:{value:{xclass:"check-tree-node"}}}},{xclass:"check-tree-node",priority:20});e.mix(b,{PARTIAL_CHECK:2,CHECK:1,EMPTY:0});return b},{requires:["node","./node"]});
KISSY.add("tree/check-tree",function(e,b,c,h,a){return c.extend([a],{},{ATTRS:{xrender:{value:h},defaultChildCfg:{value:{xclass:"check-tree-node"}}}},{xclass:"check-tree",priority:40})},{requires:["component/base","./check-node","./tree-render","./tree-manager"]});
KISSY.add("tree/node-render",function(e,b,c,h){return c.Render.extend({initializer:function(){var a=this.get("renderData");e.mix(this.get("elAttrs"),{role:"tree-node","aria-labelledby":"ks-tree-node-content"+a.id,"aria-expanded":a.expanded?"true":"false","aria-selected":a.selected?"true":"false","aria-level":a.depth,title:a.tooltip});e.mix(this.get("childrenElSelectors"),{contentEl:"#ks-tree-node-content{id}",expandIconEl:"#ks-tree-expand-icon{id}",rowEl:"#ks-tree-node-row{id}",iconEl:"#ks-tree-icon{id}",
childrenEl:"#ks-tree-children{id}",checkIconEl:"#ks-tree-node-checked{id}"})},refreshCss:function(a,b){var c=this.get("iconEl"),d,g,h=this.get("expandIconEl"),k=this.get("childrenEl");b?(d="tree-file-icon",g="tree-expand-icon-{t}"):this.get("expanded")?(d="tree-expanded-folder-icon",g="tree-expand-icon-{t}minus"):(d="tree-collapsed-folder-icon",g="tree-expand-icon-{t}plus");c[0].className=this.getCssClassWithPrefix(d);h[0].className=this.getCssClassWithPrefix(e.substitute(g,{t:a?"l":"t"}));k[0].className=
this.getCssClassWithPrefix(a?"tree-lchildren":"tree-children")},_onSetExpanded:function(a){this.get("childrenEl")[a?"show":"hide"]();this.get("el").attr("aria-expanded",a)},_onSetSelected:function(a){this.get("rowEl")[a?"addClass":"removeClass"](this.getCssClassWithPrefix("tree-node-selected"));this.get("el").attr("aria-selected",a)},_onSetDepth:function(a){this.get("el")[0].setAttribute("aria-level",a)},_onSetCheckState:function(a){this.get("checkIconEl").removeClass(this.getCssClassWithPrefix("tree-node-checked0 tree-node-checked1 tree-node-checked2")).addClass(this.getCssClassWithPrefix("tree-node-checked")+
a)},getChildrenContainerEl:function(){return this.get("childrenEl")}},{ATTRS:{contentTpl:{value:h},childrenEl:{},expandIconEl:{},tooltip:{},iconEl:{},expanded:{sync:0},rowEl:{},depth:{sync:0},contentEl:{},isLeaf:{},selected:{sync:0},checkIconEl:{},checkable:{},checkState:{sync:0}},HTML_PARSER:{rowEl:function(a){return a.one("."+this.getCssClassWithPrefix("tree-node-row"))},childrenEl:function(a){return a.one("."+this.getCssClassWithPrefix("tree-children"))},contentEl:function(a){return a.one("."+
this.getCssClassWithPrefix("tree-node-content"))},content:function(a){return a.one("."+this.getCssClassWithPrefix("tree-node-content")).html()},isLeaf:function(a){if(a.hasClass(this.getCssClassWithPrefix("tree-node-leaf")))return!0;if(a.hasClass(this.getCssClassWithPrefix("tree-node-folder")))return!1},expanded:function(a){return"none"!=a.one("."+this.getCssClassWithPrefix("tree-children")).css("display")},expandIconEl:function(a){return a.one("."+this.getCssClassWithPrefix("tree-expand-icon"))},
checkState:function(a){if(a=a.one("."+this.getCssClassWithPrefix("tree-node-checked")))for(var b="tree-node-checked0 tree-node-checked1 tree-node-checked2".split(/\s+/),c=0;c<b.length;c++)if(a.hasClass(this.getCssClassWithPrefix(b[c])))return c;return 0},iconEl:function(a){return a.one("."+this.getCssClassWithPrefix("tree-icon"))},checkIconEl:function(a){return a.one("."+this.getCssClassWithPrefix("tree-node-checked"))}}})},{requires:["node","component/base","./node-tpl"]});
KISSY.add("tree/node-tpl",function(){return'<div id="ks-tree-node-row{{id}}"      class="{{prefixCls}}tree-node-row      {{#if selected}}         {{prefixCls}}tree-node-selected      {{/if}}      ">     <div id="ks-tree-expand-icon{{id}}"          class="{{prefixCls}}tree-expand-icon">     </div>     {{#if checkable}}     <div id="ks-tree-node-checked{{id}}"             class="{{prefixCls}}tree-node-check     {{prefixCls}}tree-node-checked{{checkState}}"></div>     {{/if}}     <div id="ks-tree-icon{{id}}"          class="{{prefixCls}}tree-icon">      </div>     <span id=\'ks-tree-node-content{{id}}\'          class="{{prefixCls}}tree-node-content">         {{{content}}}     </span> </div> <div id="ks-tree-children{{id}}"      class="{{prefixCls}}tree-children" {{#if expanded}} {{else}} style="display:none" {{/if}} > </div>'});
KISSY.add("tree/node",function(e,b,c,h,a){function l(f){f.target==this&&o(this,f.component,this.get("depth"),f.index)}function j(f){f.target==this&&(m(this.get("tree"),f.component,"_unRegister"),p(this,f.index))}function d(f){f.target===this&&this.get("el")[0].setAttribute("aria-setsize",this.get("children").length)}function g(f){var a=f.get("parent"),a=(a=a&&a.get("children"))&&a[a.length-1];return!a||a==f}function r(f){var a=f.get("isLeaf");return!(!1===a||void 0===a&&f.get("children").length)}
function k(f){var a=f.get("children");return!f.get("expanded")||!a.length?f:k(a[a.length-1])}function n(f){f.get&&f.get("view")&&f.get("view").refreshCss(g(f),r(f))}function o(f,a,d,b){var c=f.get("tree");c&&(m(c,a,"_register",d+1),p(f,b))}function m(a,d,b,c){a[b](d);void 0!==c&&d.set("depth",c);e.each(d.get("children"),function(d){"number"==typeof c?m(a,d,b,c+1):m(a,d,b)})}function p(a,d){n(a);for(var d=Math.max(0,d-1),b=a.get("children"),c,g=b.length;d<g;d++)c=b[d],n(c),c.get("el")[0].setAttribute("aria-posinset",
d+1)}var s=b.all,i=b.KeyCodes,q=c.Controller.extend([c.DecorateChild],{bindUI:function(){this.on("afterAddChild",l);this.on("afterRemoveChild",j);this.on("afterAddChild afterRemoveChild",d)},syncUI:function(){n(this);d.call(this,{target:this})},_keyNav:function(a){var d=!0,b=this.get("tree"),c=this.get("expanded"),g,e=this.get("isLeaf"),h=this.get("children");switch(a.keyCode){case i.HOME:g=b;break;case i.END:g=k(b);break;case i.UP:g=a=(a=this.prev())?k(a):this.get("parent");break;case i.DOWN:a=this.get("children");
if(this.get("expanded")&&a.length)g=a[0];else{a=this.next();for(b=this;!a&&(b=b.get("parent"));)a=b.next();g=a}break;case i.LEFT:c&&(h.length||!1===e)?this.set("expanded",!1):g=this.get("parent");break;case i.RIGHT:if(h.length||!1===e)c?g=h[0]:this.set("expanded",!0);break;default:d=!1}g&&g.select();return d},next:function(){var a=this.get("parent"),d;if(!a)return null;a=a.get("children");d=e.indexOf(this,a);return d==a.length-1?null:a[d+1]},prev:function(){var a=this.get("parent"),d;if(!a)return null;
a=a.get("children");d=e.indexOf(this,a);return 0===d?null:a[d-1]},select:function(){this.set("selected",!0)},performActionInternal:function(a){var a=s(a.target),d=this.get("expanded");this.get("tree").focus();a.equals(this.get("expandIconEl"))?this.set("expanded",!d):(this.select(),this.fire("click"))},renderChildren:function(){q.superclass.renderChildren.apply(this,arguments);this===this.get("tree")&&o(this,this,-1,0)},_onSetExpanded:function(a){n(this);this.fire(a?"expand":"collapse")},_onSetSelected:function(a,
d){var b=this.get("tree");if(!d||!d.byPassSetTreeSelectedItem)b.set("selectedItem",a?this:null)},expandAll:function(){this.set("expanded",!0);e.each(this.get("children"),function(a){a.expandAll()})},collapseAll:function(){this.set("expanded",!1);e.each(this.get("children"),function(a){a.collapseAll()})}},{ATTRS:{xrender:{value:a},handleMouseEvents:{value:!1},isLeaf:{view:1},contentEl:{view:1},expandIconEl:{view:1},iconEl:{view:1},selected:{view:1},expanded:{sync:0,value:!1,view:1},tooltip:{view:1},
tree:{getter:function(){for(var a=this;a&&!a.isTree;)a=a.get("parent");return a}},depth:{view:1},focusable:{value:!1},decorateChildCls:{value:"tree-children"},defaultChildCfg:{value:{xclass:"tree-node"}}}},{xclass:"tree-node",priority:10});return q},{requires:["node","component/base","component/extension","./node-render"]});
KISSY.add("tree/tree-manager-render",function(e){function b(){this.get("elAttrs").role="tree"}b.ATTRS={showRootNode:{}};e.augment(b,{__createDom:function(){this.get("rowEl").addClass(this.get("prefixCls")+"tree-row")},_onSetShowRootNode:function(b){this.get("rowEl")[b?"show":"hide"]()}});return b});
KISSY.add("tree/tree-manager",function(e,b,c,h){function a(){}function l(a){var a=a.get("el"),b=a.attr("id");b||a.attr("id",b=e.guid("tree-node"));return b}function j(a){a._allNodes||(a._allNodes={});return a._allNodes}a.ATTRS={showRootNode:{value:!0,view:1},selectedItem:{},focusable:{value:!0}};e.augment(a,h.DelegateChildren,{isTree:1,_register:function(a){a.__isRegisted||(j(this)[l(a)]=a,a.__isRegisted=1)},_unRegister:function(a){a.__isRegisted&&(delete j(this)[l(a)],a.__isRegisted=0)},handleKeyEventInternal:function(a){var c=
this.get("selectedItem");return a.keyCode==b.KeyCodes.ENTER?c.performActionInternal(a):c._keyNav(a)},getOwnerControl:function(a){for(var b,c=j(this),e=this.get("el")[0];a&&a!==e;){if(b=c[a.id])return b;a=a.parentNode}return this},_onSetSelectedItem:function(a,b){a&&b.prevVal&&b.prevVal.set("selected",!1,{data:{byPassSetTreeSelectedItem:1}})},_onSetFocused:function(a){c.Controller.prototype._onSetFocused.apply(this,arguments);a&&!this.get("selectedItem")&&this.select()}});return a},{requires:["event",
"component/base","component/extension"]});KISSY.add("tree/tree-render",function(e,b,c){return b.extend([c])},{requires:["./node-render","./tree-manager-render"]});KISSY.add("tree",function(e,b,c,h,a){b.Node=c;b.CheckNode=h;b.CheckTree=a;return b},{requires:["tree/base","tree/node","tree/check-node","tree/check-tree"]});
