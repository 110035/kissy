/*
Copyright 2013, KISSY UI Library v1.40dev
MIT Licensed
build time: May 14 17:52
*/
KISSY.add("tree/base",function(f,b,d,g,a){return d.extend([a],{},{ATTRS:{xrender:{value:g},defaultChildCfg:{value:{xclass:"tree-node"}}}},{xclass:"tree",priority:30})},{requires:["component/base","./node","./tree-render","./tree-manager"]});
KISSY.add("tree/check-node",function(f,b,d){var g=b.all,b=d.extend({performActionInternal:function(a){var b;b=this.get("expanded");var c=this.get("expandIconEl"),h=this.get("tree"),a=g(a.target);h.focus();a.equals(c)?this.set("expanded",!b):(b=this.get("checkState"),this.set("checkState",1==b?0:1),this.fire("click"))},_onSetCheckState:function(a){var b=this.get("parent"),c,h,d,g;(1==a||0==a)&&f.each(this.get("children"),function(c){c.set("checkState",a)});if(b){c=0;g=b.get("children");for(h=0;h<g.length;h++){d=
g[h];d=d.get("checkState");if(2==d){b.set("checkState",2);return}1==d&&c++}0===c?b.set("checkState",0):c==g.length?b.set("checkState",1):b.set("checkState",2)}}},{ATTRS:{checkIconEl:{view:1},checkable:{value:!0,view:1},checkState:{value:0,sync:0,view:1},defaultChildCfg:{value:{xclass:"check-tree-node"}}}},{xclass:"check-tree-node",priority:20});f.mix(b,{PARTIAL_CHECK:2,CHECK:1,EMPTY:0});return b},{requires:["node","./node"]});
KISSY.add("tree/check-tree",function(f,b,d,g,a){return d.extend([a],{},{ATTRS:{xrender:{value:g},defaultChildCfg:{value:{xclass:"check-tree-node"}}}},{xclass:"check-tree",priority:40})},{requires:["component/base","./check-node","./tree-render","./tree-manager"]});
KISSY.add("tree/node-render",function(f,b,d,g){return d.Render.extend({initializer:function(){var a=this.get("renderData");f.mix(this.get("elAttrs"),{role:"tree-node","aria-labelledby":"ks-tree-node-content"+a.id,"aria-expanded":a.expanded?"true":"false","aria-selected":a.selected?"true":"false","aria-level":a.depth,title:a.tooltip});f.mix(this.get("childrenElSelectors"),{contentEl:"#ks-tree-node-content{id}",expandIconEl:"#ks-tree-expand-icon{id}",rowEl:"#ks-tree-node-row{id}",iconEl:"#ks-tree-icon{id}",
childrenEl:"#ks-tree-children{id}",checkIconEl:"#ks-tree-node-checked{id}"})},refreshCss:function(a,b){var c=this.get("iconEl"),h,d,g=this.get("expandIconEl"),i=this.get("childrenEl");b?(h="tree-file-icon",d="tree-expand-icon-{t}"):this.get("expanded")?(h="tree-expanded-folder-icon",d="tree-expand-icon-{t}minus"):(h="tree-collapsed-folder-icon",d="tree-expand-icon-{t}plus");c[0].className=this.getCssClassWithPrefix(h);g[0].className=this.getCssClassWithPrefix(f.substitute(d,{t:a?"l":"t"}));i[0].className=
this.getCssClassWithPrefix(a?"tree-lchildren":"tree-children")},_onSetExpanded:function(a){this.get("childrenEl")[a?"show":"hide"]();this.get("el").attr("aria-expanded",a)},_onSetSelected:function(a){this.get("rowEl")[a?"addClass":"removeClass"](this.getCssClassWithPrefix("tree-node-selected"));this.get("el").attr("aria-selected",a)},_onSetDepth:function(a){this.get("el")[0].setAttribute("aria-level",a)},_onSetCheckState:function(a){this.get("checkIconEl").removeClass(this.getCssClassWithPrefix("tree-node-checked0 tree-node-checked1 tree-node-checked2")).addClass(this.getCssClassWithPrefix("tree-node-checked")+
a)},getChildrenContainerEl:function(){return this.get("childrenEl")}},{ATTRS:{contentTpl:{value:g},childrenEl:{},expandIconEl:{},tooltip:{},iconEl:{},expanded:{sync:0},rowEl:{},depth:{sync:0},contentEl:{},isLeaf:{},selected:{sync:0},checkIconEl:{},checkable:{},checkState:{sync:0}},HTML_PARSER:{rowEl:function(a){return a.one("."+this.getCssClassWithPrefix("tree-node-row"))},childrenEl:function(a){return a.one("."+this.getCssClassWithPrefix("tree-children"))},contentEl:function(a){return a.one("."+
this.getCssClassWithPrefix("tree-node-content"))},content:function(a){return a.one("."+this.getCssClassWithPrefix("tree-node-content")).html()},isLeaf:function(a){if(a.hasClass(this.getCssClassWithPrefix("tree-node-leaf")))return!0;if(a.hasClass(this.getCssClassWithPrefix("tree-node-folder")))return!1},expanded:function(a){return"none"!=a.one("."+this.getCssClassWithPrefix("tree-children")).css("display")},expandIconEl:function(a){return a.one("."+this.getCssClassWithPrefix("tree-expand-icon"))},
checkState:function(a){if(a=a.one("."+this.getCssClassWithPrefix("tree-node-checked")))for(var b="tree-node-checked0 tree-node-checked1 tree-node-checked2".split(/\s+/),c=0;c<b.length;c++)if(a.hasClass(this.getCssClassWithPrefix(b[c])))return c;return 0},iconEl:function(a){return a.one("."+this.getCssClassWithPrefix("tree-icon"))},checkIconEl:function(a){return a.one("."+this.getCssClassWithPrefix("tree-node-checked"))}}})},{requires:["node","component/base","./node-tpl"]});
KISSY.add("tree/node-tpl",function(){return'<div id="ks-tree-node-row{{id}}"      class="{{prefixCls}}tree-node-row      {{#if selected}}         {{prefixCls}}tree-node-selected      {{/if}}      ">     <div id="ks-tree-expand-icon{{id}}"          class="{{prefixCls}}tree-expand-icon">     </div>     {{#if checkable}}     <div id="ks-tree-node-checked{{id}}"             class="{{prefixCls}}tree-node-check     {{prefixCls}}tree-node-checked{{checkState}}"></div>     {{/if}}     <div id="ks-tree-icon{{id}}"          class="{{prefixCls}}tree-icon">      </div>     <span id=\'ks-tree-node-content{{id}}\'          class="{{prefixCls}}tree-node-content">         {{{content}}}     </span> </div> <div id="ks-tree-children{{id}}"      class="{{prefixCls}}tree-children" {{#if expanded}} {{else}} style="display:none" {{/if}} > </div>'});
KISSY.add("tree/node",function(f,b,d,g){function a(e){e.target==this&&n(this,e.component,this.get("depth"),e.index)}function k(e){e.target==this&&(l(this.get("tree"),e.component,"_unRegister"),o(this,e.index))}function c(e){e.target===this&&this.get("el")[0].setAttribute("aria-setsize",this.get("children").length)}function h(e){var a=e.get("parent"),a=(a=a&&a.get("children"))&&a[a.length-1];return!a||a==e}function q(e){var a=e.get("isLeaf");return!(!1===a||void 0===a&&e.get("children").length)}function m(e){var a=
e.get("children");return!e.get("expanded")||!a.length?e:m(a[a.length-1])}function i(e){e.get&&e.get("view")&&e.get("view").refreshCss(h(e),q(e))}function n(e,a,c,b){var d=e.get("tree");d&&(l(d,a,"_register",c+1),o(e,b))}function l(a,c,b,d){a[b](c);void 0!==d&&c.set("depth",d);f.each(c.get("children"),function(c){"number"==typeof d?l(a,c,b,d+1):l(a,c,b)})}function o(a,c){i(a);for(var c=Math.max(0,c-1),b=a.get("children"),d,h=b.length;c<h;c++)d=b[c],i(d),d.get("el")[0].setAttribute("aria-posinset",
c+1)}var r=b.all,j=b.KeyCodes,p=d.Container.extend([d.DecorateChild],{bindUI:function(){this.on("afterAddChild",a);this.on("afterRemoveChild",k);this.on("afterAddChild afterRemoveChild",c)},syncUI:function(){i(this);c.call(this,{target:this})},_keyNav:function(a){var c=!0,b=this.get("tree"),d=this.get("expanded"),h,g=this.get("isLeaf"),f=this.get("children");switch(a.keyCode){case j.HOME:h=b;break;case j.END:h=m(b);break;case j.UP:h=a=(a=this.prev())?m(a):this.get("parent");break;case j.DOWN:a=this.get("children");
if(this.get("expanded")&&a.length)h=a[0];else{a=this.next();for(b=this;!a&&(b=b.get("parent"));)a=b.next();h=a}break;case j.LEFT:d&&(f.length||!1===g)?this.set("expanded",!1):h=this.get("parent");break;case j.RIGHT:if(f.length||!1===g)d?h=f[0]:this.set("expanded",!0);break;default:c=!1}h&&h.select();return c},next:function(){var a=this.get("parent"),c;if(!a)return null;a=a.get("children");c=f.indexOf(this,a);return c==a.length-1?null:a[c+1]},prev:function(){var a=this.get("parent"),c;if(!a)return null;
a=a.get("children");c=f.indexOf(this,a);return 0===c?null:a[c-1]},select:function(){this.set("selected",!0)},performActionInternal:function(a){var a=r(a.target),c=this.get("expanded");this.get("tree").focus();a.equals(this.get("expandIconEl"))?this.set("expanded",!c):(this.select(),this.fire("click"))},renderChildren:function(){p.superclass.renderChildren.apply(this,arguments);this===this.get("tree")&&n(this,this,-1,0)},_onSetExpanded:function(a){i(this);this.fire(a?"expand":"collapse")},_onSetSelected:function(a,
c){var b=this.get("tree");if(!c||!c.byPassSetTreeSelectedItem)b.set("selectedItem",a?this:null)},expandAll:function(){this.set("expanded",!0);f.each(this.get("children"),function(a){a.expandAll()})},collapseAll:function(){this.set("expanded",!1);f.each(this.get("children"),function(a){a.collapseAll()})}},{ATTRS:{delegateChildren:{value:!1},xrender:{value:g},handleMouseEvents:{value:!1},isLeaf:{view:1},contentEl:{view:1},expandIconEl:{view:1},iconEl:{view:1},selected:{view:1},expanded:{sync:0,value:!1,
view:1},tooltip:{view:1},tree:{getter:function(){for(var a=this;a&&!a.isTree;)a=a.get("parent");return a}},depth:{view:1},focusable:{value:!1},decorateChildCls:{value:"tree-children"},defaultChildCfg:{value:{xclass:"tree-node"}}}},{xclass:"tree-node",priority:10});return p},{requires:["node","component/base","./node-render"]});
KISSY.add("tree/tree-manager-render",function(f){function b(){this.get("elAttrs").role="tree"}b.ATTRS={showRootNode:{}};f.augment(b,{__createDom:function(){this.get("rowEl").addClass(this.get("prefixCls")+"tree-row")},_onSetShowRootNode:function(b){this.get("rowEl")[b?"show":"hide"]()}});return b});
KISSY.add("tree/tree-manager",function(f,b,d){function g(){}function a(a){var a=a.get("el"),b=a.attr("id");b||a.attr("id",b=f.guid("tree-node"));return b}function k(a){a._allNodes||(a._allNodes={});return a._allNodes}g.ATTRS={delegateChildren:{value:!0},showRootNode:{value:!0,view:1},selectedItem:{},focusable:{value:!0}};f.augment(g,{isTree:1,_register:function(c){c.__isRegisted||(k(this)[a(c)]=c,c.__isRegisted=1)},_unRegister:function(c){c.__isRegisted&&(delete k(this)[a(c)],c.__isRegisted=0)},handleKeyEventInternal:function(a){var d=
this.get("selectedItem");return a.keyCode==b.KeyCodes.ENTER?d.performActionInternal(a):d._keyNav(a)},getOwnerControl:function(a){for(var b,d=k(this),f=this.get("el")[0];a&&a!==f;){if(b=d[a.id])return b;a=a.parentNode}return this},_onSetSelectedItem:function(a,b){a&&b.prevVal&&b.prevVal.set("selected",!1,{data:{byPassSetTreeSelectedItem:1}})},_onSetFocused:function(a){d.Controller.prototype._onSetFocused.apply(this,arguments);a&&!this.get("selectedItem")&&this.select()}});return g},{requires:["event",
"component/base"]});KISSY.add("tree/tree-render",function(f,b,d){return b.extend([d])},{requires:["./node-render","./tree-manager-render"]});KISSY.add("tree",function(f,b,d,g,a){b.Node=d;b.CheckNode=g;b.CheckTree=a;return b},{requires:["tree/base","tree/node","tree/check-node","tree/check-tree"]});
